@module("../assets/solfarm.png")
external image: string = "default"

@react.component
let make = () => {
  let code = (code: string) => {
    <div className="mt-10">
      <pre className="bg-white text-gray-500 rounded my-2 px-4 py-5 font-mono w-full">
        <code>{code->React.string}</code>
      </pre>
    </div>
  }

  let rescriptCode = () => code(`let name = Some("Andres")

let element = switch name {
  | Some(name) => <div>{\`Hello \$\{name\}\`->React.string}</div>
  | None => React.null
}`)

  let reactCode = () => code(`let component = () => {
  <div>
    <h1>Hello world</h1>
  </div>
}`)

  let tailwindCode = () => code(`let component = () => {
  <div className="bg-slate-500 px-5 py-3">
    <h1 className="marker:bg-cyan-300 marker:text-white">Hello world</h1>
  </div>
}`)

  let imageContent = () => {
    let imageCode = () => code(`@module("../assets/solfarm.png")
external image: string = "default"

let component = () => {
  <img src={image} />
}`)
    <div className="py-5">
      <h1 className="mb-2">{"This is a source imported image that resides at src/assets/ directory."->React.string}</h1>
      <img src={image} alt="Image" />
      {imageCode()}
    </div>
  }

  let features: array<Feature.feature> = [
    {
      title: "Rescript",
      description: "Adopted the robustly typed functional language that is reliable enough to not introduce bugs in the application if done right.",
      extraContents: Some(rescriptCode())
    },
    {
      title: "React",
      description: "Tha latest React 18 integrated to the stack. However, @rescript/react binding library only supports up to React 17 at the moment.",
      extraContents: Some(reactCode())
    },
    {
      title: "Tailwind CSS",
      description: "Latest Tailwind V3+ included and ready to make awesome styles in the Rescript source file itself.",
      extraContents: Some(tailwindCode())
    },
    {
      title: "Routing",
      description: "Server side routing has been provided. SPA routing that utilizes react-router-dom is currently unsupported.",
      extraContents: None
    },
    {
      title: "Not Found Page",
      description: "A delicately crafted 404 page that hopefully reduces the amount of grunt task in development.",
      extraContents: None
    },
    {
      title: "Layout",
      description: "A default layout for all the pages in the application has been provided. It can be modified in the layouts/Default.res file.",
      extraContents: None
    },
    {
      title: "esbuild",
      description: "The fastest and most efficient JavaScript bundler to parse all the JS output generated by ReScript.",
      extraContents: None
    },
    {
      title: "Dark Mode",
      description: "A readily made Dark Mode component utilizing Tailwind CSS is also provided.",
      extraContents: None
    },
    {
      title: "Image Import",
      description: "Image files can be imported directly in Rescript source file.",
      extraContents: Some(imageContent())
    },
  ]

  let features = features
    ->Belt.Array.mapWithIndex((index, item) =>
      <Feature 
        index={index + 1}
        title={item.title}
        description={item.description}
        extraContents={item.extraContents}
      />)
    ->React.array

  <div className="max-w-[1200px] mx-auto py-14 flex gap-9 flex-col">
    features
  </div>
}
